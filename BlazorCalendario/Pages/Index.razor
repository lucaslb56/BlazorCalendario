@page "/"
@using BlazorCalendario.Data

<style type="text/css">
    #tblParent tbody tr td {
        width: 200px;
        height: 200px;
    }

    #divParent {
        position: relative;
    }

    #divModal {
        z-index: 10;
        position: absolute;
        border: 1px solid #000000;
        border-radius: 3px;
        background-color: #ffffff;
        left: 40%;
        top: 20%;
        width: 400px;
        min-height: 300px;
    }

    .modalHeading {
        text-align: center;
        font-size: 20px;
        text-decoration: underline;
        margin-bottom: 10px;
    }
</style>

<PageTitle>Index</PageTitle>

<h1>Agendamentos</h1>

@if (displayModal)
{
    <div id="divModal">
        <div class="container">
            <div class="panel panel-default">
                <div class="panel-heading modalHeading">Novo evento</div>
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-4">
                            <label>Data inicial: </label>
                        </div>
                        <div class="col-md-8">
                            <input type="date" style="width:100%;" />
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <label>Data final: </label>
                    </div>
                    <div class="col-md-8">
                        <input type="date" style="width:100%;"/>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <label>Assunto: </label>
                    </div>
                    <div class="col-md-8">
                        <input type="text" placeholder="Assunto"/>
                    </div>
                </div>
                <div class="row" style="margin-bottom:10px;">
                    <div class="col-md-6">
                    </div>
                    <div class="col-md-6" style="text-align:right;">
                        <button class="btn btn-success" style="float: left; margin-right:5px;">Salvar</button>
                        <button class="btn btn-danger" @onclick="CloseModal" style="float:left;">Fechar</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<select @onchange="CarregarCalendario">
    @foreach (string nomeMes in nomeMeses)
    {
        <option>@nomeMes.ToUpper()</option>
    }
</select>

<table class="table table-bordered table-striped">
    <thead>
        <tr>
            @for (var indiceDia = 0; indiceDia < dias.Count(); indiceDia++)
            {
                <th>
                    @dias[indiceDia]
                </th>
            }
        </tr>
    </thead>

    <tbody>
        @for (var indiceSemana = 0; indiceSemana < semana.Count(); indiceSemana++)
        {
            <tr>
                @for (var indiceDia = 0; indiceDia < semana[indiceSemana].Dates.Count(); indiceDia++)
                {
                    var sIndice = indiceSemana;
                    var dIndice = indiceSemana;

                    <td @onclick="@(()=>OpenModal(sIndice, dIndice))">
                        @semana[indiceSemana].Dates[indiceDia].ValorData
                        <br /><br />

                        <label>@semana[indiceSemana].Dates[indiceDia].Nota.ToUpper()</label>
                        <br /><br />

                        <!--Número do celular : [@indiceSemana, @indiceDia]  -->
                    </td>
                }
            </tr>
        }
    </tbody>
</table>

@code {
    bool displayModal = false;
    List<string> nomeMeses = new List<string>();
    List<string> dias = new List<string>();
    List<Semana> semana = new List<Semana>();
    DateTime dataIncio = new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day);
    DateTime dataFinal = (new DateTime(DateTime.Now.Year, DateTime.Now.Month, 1)).AddMonths(1).AddDays(-1);


    protected override void OnInitialized()
    {
        nomeMeses = System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.MonthGenitiveNames.ToList();
        CriarCabecalhoCalendario();
        CriarCorpoCalendario();
    }

    private void CarregarCalendario(ChangeEventArgs e)
    {
        var mes = e.Value.ToString();

        // Filter out null values before parsing:
        if (string.IsNullOrEmpty(mes))
        {
            // Handle null value case (e.g., display error message)
            return;
        }

        int indiceMes = DateTime.ParseExact(mes, "MMMM", System.Globalization.CultureInfo.CreateSpecificCulture("pt-BR")).Month;
        dataIncio = new DateTime(DateTime.Now.Year, indiceMes, 1);
        dataFinal = (new DateTime(DateTime.Now.Year, indiceMes, 1)).AddMonths(1).AddDays(-1);

        CriarCabecalhoCalendario();
        CriarCorpoCalendario();
    }

    private void CriarCabecalhoCalendario()
    {
        var dia = new List<string>();

        for (var percorre = dataIncio; percorre <= dataFinal; percorre = percorre.AddDays(1))
        {
            dia.Add(percorre.ToString("dddd"));
        }
        dias = dia.Distinct().ToList();
    }

    private void CriarCorpoCalendario()
    {
        semana = new List<Semana>();

        int flag = 0;
        Semana semanaClsse = new Semana();

        List<EventoDia> eventos = new List<EventoDia>();
        var totalDias = (int)(dataFinal - dataIncio).TotalDays;
        int contarDias = 0;

        for (var data = dataIncio; data <= dataFinal; data = data.AddDays(1))
        {
            flag++;

            eventos.Add(new EventoDia()
                {
                    ValorData = data.ToString("dd"),
                    NomeDia = data.ToString("dddd")
                });

            if (flag == 7)
            {
                semanaClsse = new Semana();
                semanaClsse.Dates = eventos;
                semana.Add(semanaClsse);

                eventos = new List<EventoDia>();
                flag = 0;
            }
            if (contarDias == totalDias)
            {
                semanaClsse = new Semana();
                semanaClsse.Dates = eventos;
                semana.Add(semanaClsse);
                break;
            }
            contarDias++;
        }
    }

    private void CloseModal()
    {
        displayModal = false;
    }

    private void OpenModal(int sIndice, int dIndice)
    {
        displayModal = true;
    }
}
